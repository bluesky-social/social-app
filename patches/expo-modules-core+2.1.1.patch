diff --git a/node_modules/expo-modules-core/android/src/main/java/expo/modules/kotlin/devtools/ExpoNetworkInspectOkHttpInterceptors.kt b/node_modules/expo-modules-core/android/src/main/java/expo/modules/kotlin/devtools/ExpoNetworkInspectOkHttpInterceptors.kt
index 47c4d15..afe138d 100644
--- a/node_modules/expo-modules-core/android/src/main/java/expo/modules/kotlin/devtools/ExpoNetworkInspectOkHttpInterceptors.kt
+++ b/node_modules/expo-modules-core/android/src/main/java/expo/modules/kotlin/devtools/ExpoNetworkInspectOkHttpInterceptors.kt
@@ -125,6 +125,10 @@ internal fun peekResponseBody(
 }
 
 internal fun shouldParseBody(response: Response): Boolean {
+  if (response.request.url.encodedPath == "/bitdrift_public.protobuf.client.v1.ApiService/Mux") {
+    return false
+  }
+
   // Check for Content-Type
   val skipContentTypes = listOf(
     "text/event-stream", // Server Sent Events
diff --git a/node_modules/expo-modules-core/src/uuid/uuid.ts b/node_modules/expo-modules-core/src/uuid/uuid.ts
index 148beac..fabdff5 100644
--- a/node_modules/expo-modules-core/src/uuid/uuid.ts
+++ b/node_modules/expo-modules-core/src/uuid/uuid.ts
@@ -5,6 +5,7 @@ const nativeUuidv4 = globalThis?.expo?.uuidv4;
 const nativeUuidv5 = globalThis?.expo?.uuidv5;
 
 function uuidv4(): string {
+  const nativeUuidv4 = globalThis?.expo?.uuidv4;
   if (!nativeUuidv4) {
     throw Error(
       "Native UUID version 4 generator implementation wasn't found in `expo-modules-core`"
@@ -23,6 +24,7 @@ function uuidv5(name: string, namespace: string | number[]) {
     throw new Error('`namespace` must be a valid UUID string or an Array of 16 byte values');
   }
 
+  const nativeUuidv5 = globalThis?.expo?.uuidv5;
   if (!nativeUuidv5) {
     throw Error("Native UUID type 5 generator implementation wasn't found in `expo-modules-core`");
   }
